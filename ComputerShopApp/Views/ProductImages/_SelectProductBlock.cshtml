@using ComputerShopApp.Models.ViewModels.Shop
@model CreateImageViewModel
@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@

<div id="select-block">
    <div class="mb-3">
        <label asp-for="SelectedBrandId" class="control-label"></label>
        <select class="form-select" asp-for="SelectedBrandId" asp-items="@Model.BrandsList" onchange="getProducts(event)">
            <option value="@(null)">All</option>
        </select>
    </div>
    <div class="mb-3">
        <label asp-for="SelectedCategoryId" class="control-label"></label>
        <select class="form-select" asp-for="SelectedCategoryId" asp-items="@Model.CategoriesList" onchange="getProducts(event)">
            <option value="@(null)">All</option>
        </select>
    </div>
    <div class="mb-3">
        <label asp-for="SelectedProductId" class="control-label"></label>
        <select class="form-select" asp-for="SelectedProductId" asp-items="@Model.ProductsList"></select>
    </div>
    <script>
        async function getProducts(e) {
            var brandSelector = document.querySelector('select[name=SelectedBrandId]');
            var categorySelector = document.querySelector("select[name=SelectedCategoryId]");

            const brandId = brandSelector.value;
            console.log("Brand: ", brandId);
            const categoryId = categorySelector.value;
            console.log("Category: ", categoryId);

            let response = await fetch(`/productimages/getproducts?brandId=${brandId}&categoryId=${categoryId}`, { method: "GET" });

            if (response.ok) {
                const text = await response.text();
                const selectBlock = document.getElementById('select-block');

                const tempElement = document.createElement('div');
                tempElement.innerHTML = text;
                console.log(tempElement);

                if (selectBlock) selectBlock.replaceWith(tempElement);
            }
        }
    </script>
</div>
